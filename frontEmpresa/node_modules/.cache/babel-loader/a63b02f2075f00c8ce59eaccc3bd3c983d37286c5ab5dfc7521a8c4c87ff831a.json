{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\frontEmpresa\\\\empresa-de-limpeza\\\\src\\\\components\\\\ClientFilter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClientFilter() {\n  _s();\n  const [filteredClients, setFilteredClients] = useState([]);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.get(`http://localhost:5000/api/clientes/filtrar?name=${name}&phone=${phone}&email=${email}`).then(res => {\n      setFilteredClients(res.data);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-filter\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      onSubmit: handleSubmit,\n      className: \"filtragem-cliente\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        onChange: handleChange,\n        placeholder: \"Nome para filtragem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"tel\",\n        name: \"phone\",\n        value: phone,\n        onChange: handleChange,\n        placeholder: \"Telefone para filtragem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        placeholder: \"Email para filtragem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Filtrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredClients.map(client => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [client.nome, \" - \", client.email]\n      }, client.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ClientFilter, \"xKQPBLaHJOLdChKnaQn2hmcEuos=\");\n_c = ClientFilter;\nexport default ClientFilter;\nvar _c;\n$RefreshReg$(_c, \"ClientFilter\");","map":{"version":3,"names":["React","useState","axios","Form","Button","jsxDEV","_jsxDEV","ClientFilter","_s","filteredClients","setFilteredClients","name","setName","email","setEmail","phone","setPhone","handleChange","event","value","target","handleSubmit","preventDefault","get","then","res","data","className","children","Group","onSubmit","Control","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","client","nome","id","_c","$RefreshReg$"],"sources":["C:/Users/steph/OneDrive/Área de Trabalho/frontEmpresa/empresa-de-limpeza/src/components/ClientFilter.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\n\r\nfunction ClientFilter() {\r\n const [filteredClients, setFilteredClients] = useState([]);\r\n const [name, setName] = useState('');\r\n const [email, setEmail] = useState('');\r\n const [phone, setPhone] = useState('');\r\n\r\n const handleChange = event => {\r\n    const {name ,value} = event.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n        case 'phone':\r\n          setPhone(value);\r\n          break;\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n\r\n        default:\r\n          break;\r\n    }\r\n };\r\n\r\n const handleSubmit = event => {\r\n    event.preventDefault();\r\n    axios.get(`http://localhost:5000/api/clientes/filtrar?name=${name}&phone=${phone}&email=${email}`)\r\n      .then(res => {\r\n        setFilteredClients(res.data);\r\n      });\r\n };\r\n\r\n return (\r\n    <div className='container-filter'>\r\n      <Form.Group onSubmit={handleSubmit} className='filtragem-cliente'>\r\n      <Form.Control type=\"text\" name=\"name\" value={name} onChange={handleChange} placeholder=\"Nome para filtragem\" />\r\n      <Form.Control type=\"tel\" name=\"phone\" value={phone} onChange={handleChange} placeholder=\"Telefone para filtragem\" />\r\n      <Form.Control type=\"text\" name=\"email\" value={email} onChange={handleChange} placeholder=\"Email para filtragem\" />\r\n      <Button>Filtrar</Button>\r\n      </Form.Group>\r\n      <ul>\r\n        {filteredClients.map(client => (\r\n          <li key={client.id}>{client.nome} - {client.email}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n );\r\n}\r\n\r\nexport default ClientFilter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}